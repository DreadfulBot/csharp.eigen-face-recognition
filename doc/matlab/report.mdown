## Теория
### FRR
---
ВЛНР - это доля транзакций верифицированного подлинного лица, которые были ошибочно отвергнуты. В зависимости от политики решения транзакция может состоять из одной или более попыток подлинного лица. 

ВЛНД  следует  определять  как  долю  (или  весовую  долю)  записанных 
транзакций  подлинного  лица,  которые  были  ошибочно  отвергнуты.  Сюда 
также входят транзакции, отвергнутые из-за отказа сбора данных и ошибок 
соответствия. 

### FAR
---
ВЛД (FAR) – это доля транзакций верификации «самозванца», которые могут  быть  ошибочно  приняты.  Транзакция  в  зависимости  от  политики принятия  решения  может  состоять  из  одной  или  более  попыток «самозванца». 

ВЛД  следует  определять  как  долю  (или  весовую  долю)  записанных пассивных транзакций «самозванца»,которые были ошибочно приняты.

### FMR
---
ВЛС  (FMR)  –  это  доля  образцов,  полученных  в  результате  пассивных попыток  «самозванца»,  которые  ошибочно  признаны  совпадающими  с шаблоном зарегистрированного пользователя. 

При  пассивных  попытках  «самозванца»  пользователи  предоставляют свою  собственную  биометрическую  характеристику,  как  будто  они совершают  попытку  успешной  верификации  с  собственным  шаблоном. Например, в случае динамической верификации подписи «самозванец» при пассивной попытке поставил бы свою собственную подпись.

### FNMR
---
ВЛНС (FNMR) – это доля образцов, полученных в результате попыток подлинного  лица,  которые  ошибочно  признаны  несовпадающими  с шаблоном зарегистрированного в системе пользователя. 

ВЛНС  следует  определять  как  долю  (или  весовую  долю) зафиксированных  попыток  подлинного  лица,  которые  были  переданы подсистеме  сравнения,  и  для  которых  степень  схожести  была  ниже соответствующего порога принятия решения о схожести.

## Скрипт MATLAB
---

**Ввод:**
    тренировочная база;
    индекс тестового изображения;

**Вывод:**
    индекс тестового изображения;наименьший коэффициент совпадения (результирующий);индекс тренировочного изображения (найденного) | not recognized;

**Комментарий:**
    Пороговым значением коэффициента совпадения установлено значение 0,3, то есть при наименьшим коэффициенте совпадения ***ниже 0,3*** результат работы скрипта - ***not recognized***;
    
Специфика работы скрипта такова, что он находит максимально приближенный результат распознавания, так что единственный способ обеспечить отказ незарегистрированному пользователю доступ в систему - конфигурировать коэффициент точности работы алгоритма (т.е. параметр *Euc_dist_min*);

## Скрипт С#
---

**Алгоритм:**
  * разбить каждую группу изображений на 50/50 на тест и тренировку
  * переместить тренировочные изображения в ***общую папку тренировки*** с переименованием
  * переместить тестовые изображения в ***общую папку теста*** с переименование
  * создать cvs-файл вида:
      
 индекс теcтового изображения (testImageName)   |   индекс тренировочного изображения (trainImageName)
           ---                  |               ---                  


### Алгоритм работы в MySQL
---
  * по результатам работы скриптов, составить 2 таблицы в базе данных
  * выявить оптимальную величину максимального значения ***Euc_dist_min*** - коэффициента точности
  * сопоставить результаты таблицы MATLAB с результатом таблицы C#:
      - если индекс тренировочного изображения (найденного) (MATLAB) = not found => инкрементировать значение ***FRR***
      - если индекс тренировочного изображения (найденного) (MATLAB) не принадлежит индексу тренировочного изображения (C#) по ключу **индекс тестового изображения**, то инкрементируем значение ***FAR***

### Ход работы

Для сопоставления полученных наборов данных использовалась БД MySQL и скрипты на языке запросов SQL.


Скрипт для вывода верно распознанных личностей **(с фильтрацией по ошибке)**
---

```sql
/* CORRECT */
SET @CORRECT = (
  SELECT count(Temp1.testImageName)/500*100 AS CORRECT
  FROM
    ( 
      SELECT ml.testImageName
      FROM faceRecognition.database_matlab_2 AS ml
        LEFT JOIN faceRecognition.database_source_2 AS src ON(ml.testImageName = src.testImageName AND ml.trainImageName = src.trainImageName)
      WHERE 
        ml.Euc_dist_min < @k
                AND ml.trainImageName = src.trainImageName
      GROUP BY ml.testImageName
      ORDER BY cast((replace(ml.testImageName,'.bmp','')) AS SIGNED)
    ) AS Temp1
);
```

Результат:

Набор 1 | Набор 2
--- | ---
431/500 | 464/500

---

Скрипт для распознавания FNMR (найдено совпадение, но ошибка выше критической)
---

```sql
/* FNMR
  найдено совпадение, но ошибка выше критической
 */
SET @FNMR =  (
  SELECT count(Temp1.testImageName)/500*100 AS FNMR
  FROM
    ( 
      SELECT ml.testImageName
      FROM faceRecognition.database_matlab_2 AS ml
        LEFT JOIN faceRecognition.database_source_2 AS src ON(ml.testImageName = src.testImageName)
      WHERE 
        ml.Euc_dist_min > @k
        AND ml.trainImageName = src.trainImageName
      GROUP BY ml.testImageName
      ORDER BY cast((replace(ml.testImageName,'.bmp','')) AS SIGNED)
    ) AS Temp1
);
```

Результат: 

Набор 1 | Набор 2
--- | ---
17/500 | 7/500

---

Скрипт, считающий процентное соотношение FRR:

```sql
/* FRR
  найдено неверное совпадение при корректной ошибке
 */
SET @FRR =  (
  SELECT count(Temp1.testImageName)/500*100 AS FAR
  FROM
    ( 
      SELECT ml1.testImageName
      FROM faceRecognition.database_matlab_2 AS ml1
        LEFT JOIN faceRecognition.database_source_2 AS src ON(ml1.testImageName = src.testImageName)
      WHERE 
        ml1.Euc_dist_min < @k
        AND NOT EXISTS(
          SELECT ml.testImageName
          FROM faceRecognition.database_matlab_2 AS ml
            LEFT JOIN faceRecognition.database_source_2 AS src ON(ml.testImageName = src.testImageName AND ml.trainImageName = src.trainImageName)
          WHERE 
            ml.Euc_dist_min < @k
            AND ml.trainImageName = src.trainImageName
            AND ml.testImageName = ml1.testImageName
          ORDER BY cast((replace(ml.testImageName,'.bmp','')) AS SIGNED)
        )
      GROUP BY ml1.testImageName
      ORDER BY cast((replace(ml1.testImageName,'.bmp','')) AS SIGNED)
    ) AS Temp1
);
```

### Коэффициент распознавания *Euc_dist_min* и его влияние на FRR, FAR

#### Набор данных 1

Коэффициент | FNMR | CORRECT | FRR
--- | --- | --- | ---
1.39e15 | 63.800000000 | 0 | 0
6.83e15 | 48.800000000 | 15.000000000 | 0
8.05e15 | 44.600000000 | 19.000000000 | 0.400000000
9.92e15 | 37.200000000 | 26.400000000 | 1.600000000
1.1e16 | 33.200000000 | 30.600000000 | 2.600000000
1.33e16 | 24.400000000 | 38.600000000 | 4.400000000
1.53e16 | 19.800000000 | 44.200000000 | 7.600000000
1.71436e16 | 16.600000000 | 47.400000000 | 10.400000000
1.81e16 | 14.400000000 | 49.000000000 | 11.400000000
1.91e16 | 13.000000000 | 50.800000000 | 13.200000000
1.95e16 | 12.400000000 | 51.000000000 | 13.800000000
2.07e16 | 11.600000000 | 52.200000000 | 15.000000000
2.16e16 | 10.200000000 | 53.400000000 | 17.400000000
2.32e16 | 8.200000000 | 55.800000000 | 19.000000000
2.61e16 | 6.200000000 | 57.800000000 | 22.400000000
3e16 | 3.400000000 | 60.400000000 | 25.800000000
3.06e16 | 3.400000000 | 60.600000000 | 26.800000000
3.46e16 | 2.000000000 | 62.000000000 | 29.600000000
3.61e16 | 1.600000000 | 62.400000000 | 31.000000000
3.8e16 | 1.200000000 | 62.600000000 | 32.600000000
4.42e16 | 0.200000000 | 63.800000000 | 34.800000000
5.27e16 | 0 | 64.000000000 | 35.600000000

#### Набор данных 2

Коэффициент | FNMR | CORRECT | FRR
--- | --- | --- | ---
1.39e15 | 60.000000000 | 0 | 0
6.83e15 | 48.800000000 | 11.200000000 | 0
8.05e15 | 44.400000000 | 15.600000000 | 0
9.92e15 | 36.000000000 | 23.800000000 | 0.600000000
1.1e16 | 31.600000000 | 27.800000000 | 1.600000000
1.33e16 | 23.200000000 | 36.800000000 | 4.200000000
1.53e16 | 18.400000000 | 41.400000000 | 7.600000000
1.71436e16 | 14.000000000 | 46.000000000 | 10.200000000
1.81e16 | 11.600000000 | 48.400000000 | 12.600000000
1.91e16 | 9.400000000 | 50.200000000 | 14.600000000
1.95e16 | 9.200000000 | 50.800000000 | 15.600000000
2.07e16 | 8.200000000 | 51.800000000 | 18.000000000
2.16e16 | 7.400000000 | 52.600000000 | 19.400000000
2.32e16 | 6.400000000 | 53.600000000 | 23.000000000
2.61e16 | 3.400000000 | 56.600000000 | 29.000000000
3e16 | 1.400000000 | 58.600000000 | 34.200000000
3.06e16 | 1.000000000 | 59.000000000 | 35.200000000
3.46e16 | 0.600000000 | 59.400000000 | 37.800000000
3.61e16 | 0.600000000 | 59.400000000 | 37.800000000
3.8e16 | 0.600000000 | 59.400000000 | 38.000000000
4.42e16 | 0 | 60.000000000 | 38.600000000
5.27e16 | 0 | 60.000000000 | 39.600000000

&copy; Кривощеков Артем [therawlex@gmail.com](mailto:artk@csu.ru)

